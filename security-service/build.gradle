plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'org.sonarqube' version '5.1.0.4882'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.security'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.4")
	set('swaggerVersion', "2.6.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt:0.12.6'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.glassfish.jersey.core:jersey-common:3.1.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

spotless {
	java {
		formatAnnotations()
		removeUnusedImports()
		palantirJavaFormat()
	}
}

jacoco {
	toolVersion = "0.8.12"
}

tasks.jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy tasks.jacocoTestReport
}

bootJar {
	archiveFileName = 'security-service.jar'
}

sonar {
	properties {
		property "sonar.projectKey", "com.security:security-service"
		property "sonar.projectName", "security-service"
		property "sonar.projectVersion", "0.0.1-SNAPSHOT"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", System.getenv("SONAR_TOKEN")
		property "sonar.organization", "ccp-ms"
		property "sonar.scm.disabled", "true"
//		property "sonar.scm.provider", "git"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}
